- TCP产生粘包、拆包的表现形式
现在假设客户端向服务端连续发送了两个数据包，用packet1和packet2来表示，那么服务端收到的数据可以分为三种，现列举如下：

第一种情况，接收端正常收到两个数据包，即没有发生拆包和粘包的现象，此种情况不在本文的讨论范围内。
![](./images/TCP包正确接收.png)
第二种情况，接收端只收到一个数据包，由于TCP是不会出现丢包的，所以这一个数据包中包含了发送端发送的两个数据包的信息，这种现象即为粘包。这种情况由于接收端不知道这两个数据包的界限，所以对于接收端来说很难处理。
![](./images/TCP包发生粘包.png)
第三种情况，这种情况有两种表现形式，如下图。接收端收到了两个数据包，但是这两个数据包要么是不完整的，要么就是多出来一块，这种情况即发生了拆包和粘包。这两种情况如果不加特殊处理，对于接收端同样是不好处理的。
![](./images/TCP包发生拆包.png)
- TCP粘包产生的原因
1. 发送端启用nagle算法会将多个包合并发送
2. 接收端未及时从接收缓冲中读取数据，一次读出多个数据包
- TCP拆包产生的原因
TCP 的数据大于MSS的时候会发生分段发送